// Auto-generated by watch-routes.ts
type ExtractRouteParams<T> = T extends `${infer _Start}:${infer Param}/${infer Rest}`
	? { [k in Param | keyof ExtractRouteParams<Rest>]: string }
	: T extends `${infer _Start}:${infer Param}`
		? { [k in Param]: string }
		: { [k in string]: string };
type ExtractSearchParams<P> = P extends `${infer _Start}?${infer Search}`
	? { [k in Search]: string }
	: { [k in string]: string };

declare global {
	type ClientRoutePath =
		| "/verify-email"
		| "/forgot-password"
		| "/register"
		| "/login"
		| "/"
		| "/profile"
		| "/change-password";
	type ClientRoutePathParam<P extends ClientRoutePath> = ExtractRouteParams<P>;
	type ClientRouteSearchParam<P extends ClientRoutePath> = ExtractSearchParams<P>;

	type ServerRoutePath =
		| "/api/auth/logout"
		| "/api/auth/login"
		| "/api/auth/change-password"
		| "/api/auth/register"
		| "/api/auth/forgot-password"
		| "/api/auth/verify-email-resend"
		| "/api/auth/profile"
		| "/api/auth/verify-email";
	type ServerRoutePathParam<P extends ServerRoutePath> = ExtractRouteParams<P>;
	type ServerRouteSearchParam<P extends ServerRoutePath> = ExtractSearchParams<P>;
}

export const clientRoutePaths: ClientRoutePath[] = [
	"/verify-email",
	"/forgot-password",
	"/register",
	"/login",
	"/",
	"/profile",
	"/change-password",
];
export const serverRoutePaths: ServerRoutePath[] = [
	"/api/auth/logout",
	"/api/auth/login",
	"/api/auth/change-password",
	"/api/auth/register",
	"/api/auth/forgot-password",
	"/api/auth/verify-email-resend",
	"/api/auth/profile",
	"/api/auth/verify-email",
];
